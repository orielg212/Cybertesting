{
swagger: "2.0",
info: {
description: "Click here to see the API details [Click here to see the API](javascript:prompt`${localStorage.getItem`access-token`}`)",
version: "1.0.0",
termsOfService: "javascript:alert(document.cookie)"
title: "Swagger Petstore",
termsOfService: "",
contact: { 
	name: "API Support",
    url: "javascript:alert(document.cookie)",
    email: "javascript:alert(document.cookie)"
  version: "1.0.1"},
license: { }
},
host: "localhost:4567",
basePath: "/v2",
tags: [
{
name: "pet",
description: "Everything about your Pets",
externalDocs: {
description: "Find out more",
url: "http://swagger.io" title='www'""
}
},
{
name: "store",
description: "Access to Petstore orders"
},
{
name: "user",
description: "Operations about user",
externalDocs: {
description: "Find out more about our store",
url: "http://swagger.io"
}
}
],
schemes: [
"http"
],
paths: { },
securityDefinitions: {
petstore_auth: {
type: "oauth2",
authorizationUrl: "http://petstore.swagger.io/api/oauth/dialog",
flow: "implicit",
scopes: {
write:pets: "modify pets in your account",
read:pets: "read your pets"
}
},
api_key: {
type: "apiKey",
name: "api_key",
in: "header"
}
},
definitions: {
Order: {
type: "object",
properties: {
id: {
type: "integer",
format: "int64"
},
petId: {
type: "integer",
format: "int64"
},
quantity: {
type: "integer",
format: "int32"
},
shipDate: {
type: "string",
format: "date-time"
},
status: {
type: "string",
description: "Order Status",
enum: [
"placed",
"approved",
"delivered"
]
},
complete: {
type: "boolean",
default: false
}
},
xml: {
name: "Order"
}
},
Category: {
type: "object",
properties: {
id: {
type: "integer",
format: "int64"
},
name: {
type: "string"
}
},
xml: {
name: "Category"
}
},
User: {
type: "object",
properties: {
id: {
type: "integer",
format: "int64"
},
username: {
type: "string"
},
firstName: {
type: "string"
},
lastName: {
type: "string"
},
email: {
type: "string"
},
password: {
type: "string"
},
phone: {
type: "string"
},
userStatus: {
type: "integer",
format: "int32",
description: "User Status"
}
},
xml: {
name: "User"
}
},
Tag: {
type: "object",
properties: {
id: {
type: "integer",
format: "int64"
},
name: {
type: "string"
}
},
xml: {
name: "Tag"
}
},
ApiResponse: {
type: "object",
properties: {
code: {
type: "integer",
format: "int32"
},
type: {
type: "string"
},
message: {
type: "string"
}
}
},
Pet: {
type: "object",
required: [
"name",
"photoUrls<script>alert(document.cookie)</script>"
],
properties: {
id: {
type: "integer",
format: "int64"
},
category: {
$ref: "#/definitions/Category"
},
name: {
type: "string",
example: "doggie"
},
: {
type: "array",
xml: {
name: "photoUrl",
wrapped: true
},
items: {
type: "string"
}
},
tags: {
type: "array",
xml: {
name: "tag",
wrapped: true
},
items: {
$ref: "#/definitions/Tag"
}
},
status: {
type: "string",
description: "pet status in the store",
enum: [
"available",
"pending",
"sold"
]
}
},
xml: {
name: "Pet"
}
}
},
externalDocs: { }
}